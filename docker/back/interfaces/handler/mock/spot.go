// Code generated by MockGen. DO NOT EDIT.
// Source: spot.go

// Package mock is a generated GoMock package.
package mock

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSpotHandler is a mock of SpotHandler interface.
type MockSpotHandler struct {
	ctrl     *gomock.Controller
	recorder *MockSpotHandlerMockRecorder
}

// MockSpotHandlerMockRecorder is the mock recorder for MockSpotHandler.
type MockSpotHandlerMockRecorder struct {
	mock *MockSpotHandler
}

// NewMockSpotHandler creates a new mock instance.
func NewMockSpotHandler(ctrl *gomock.Controller) *MockSpotHandler {
	mock := &MockSpotHandler{ctrl: ctrl}
	mock.recorder = &MockSpotHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpotHandler) EXPECT() *MockSpotHandlerMockRecorder {
	return m.recorder
}

// CreateSpot mocks base method.
func (m *MockSpotHandler) CreateSpot(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateSpot", w, r)
}

// CreateSpot indicates an expected call of CreateSpot.
func (mr *MockSpotHandlerMockRecorder) CreateSpot(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSpot", reflect.TypeOf((*MockSpotHandler)(nil).CreateSpot), w, r)
}

// GetSpot mocks base method.
func (m *MockSpotHandler) GetSpot(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetSpot", w, r)
}

// GetSpot indicates an expected call of GetSpot.
func (mr *MockSpotHandlerMockRecorder) GetSpot(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSpot", reflect.TypeOf((*MockSpotHandler)(nil).GetSpot), w, r)
}

// ListSpots mocks base method.
func (m *MockSpotHandler) ListSpots(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ListSpots", w, r)
}

// ListSpots indicates an expected call of ListSpots.
func (mr *MockSpotHandlerMockRecorder) ListSpots(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSpots", reflect.TypeOf((*MockSpotHandler)(nil).ListSpots), w, r)
}
