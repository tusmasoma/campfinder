// Code generated by MockGen. DO NOT EDIT.
// Source: image.go

// Package mock is a generated GoMock package.
package mock

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockImageHandler is a mock of ImageHandler interface.
type MockImageHandler struct {
	ctrl     *gomock.Controller
	recorder *MockImageHandlerMockRecorder
}

// MockImageHandlerMockRecorder is the mock recorder for MockImageHandler.
type MockImageHandlerMockRecorder struct {
	mock *MockImageHandler
}

// NewMockImageHandler creates a new mock instance.
func NewMockImageHandler(ctrl *gomock.Controller) *MockImageHandler {
	mock := &MockImageHandler{ctrl: ctrl}
	mock.recorder = &MockImageHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageHandler) EXPECT() *MockImageHandlerMockRecorder {
	return m.recorder
}

// HandleImageCreate mocks base method.
func (m *MockImageHandler) HandleImageCreate(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleImageCreate", w, r)
}

// HandleImageCreate indicates an expected call of HandleImageCreate.
func (mr *MockImageHandlerMockRecorder) HandleImageCreate(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleImageCreate", reflect.TypeOf((*MockImageHandler)(nil).HandleImageCreate), w, r)
}

// HandleImageDelete mocks base method.
func (m *MockImageHandler) HandleImageDelete(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleImageDelete", w, r)
}

// HandleImageDelete indicates an expected call of HandleImageDelete.
func (mr *MockImageHandlerMockRecorder) HandleImageDelete(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleImageDelete", reflect.TypeOf((*MockImageHandler)(nil).HandleImageDelete), w, r)
}

// HandleImageGet mocks base method.
func (m *MockImageHandler) HandleImageGet(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleImageGet", w, r)
}

// HandleImageGet indicates an expected call of HandleImageGet.
func (mr *MockImageHandlerMockRecorder) HandleImageGet(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleImageGet", reflect.TypeOf((*MockImageHandler)(nil).HandleImageGet), w, r)
}
