// Code generated by MockGen. DO NOT EDIT.
// Source: image.go

// Package mock is a generated GoMock package.
package mock

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockImageHandler is a mock of ImageHandler interface.
type MockImageHandler struct {
	ctrl     *gomock.Controller
	recorder *MockImageHandlerMockRecorder
}

// MockImageHandlerMockRecorder is the mock recorder for MockImageHandler.
type MockImageHandlerMockRecorder struct {
	mock *MockImageHandler
}

// NewMockImageHandler creates a new mock instance.
func NewMockImageHandler(ctrl *gomock.Controller) *MockImageHandler {
	mock := &MockImageHandler{ctrl: ctrl}
	mock.recorder = &MockImageHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageHandler) EXPECT() *MockImageHandlerMockRecorder {
	return m.recorder
}

// CreateImage mocks base method.
func (m *MockImageHandler) CreateImage(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateImage", w, r)
}

// CreateImage indicates an expected call of CreateImage.
func (mr *MockImageHandlerMockRecorder) CreateImage(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateImage", reflect.TypeOf((*MockImageHandler)(nil).CreateImage), w, r)
}

// DeleteImage mocks base method.
func (m *MockImageHandler) DeleteImage(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteImage", w, r)
}

// DeleteImage indicates an expected call of DeleteImage.
func (mr *MockImageHandlerMockRecorder) DeleteImage(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteImage", reflect.TypeOf((*MockImageHandler)(nil).DeleteImage), w, r)
}

// ListImages mocks base method.
func (m *MockImageHandler) ListImages(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ListImages", w, r)
}

// ListImages indicates an expected call of ListImages.
func (mr *MockImageHandlerMockRecorder) ListImages(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListImages", reflect.TypeOf((*MockImageHandler)(nil).ListImages), w, r)
}
